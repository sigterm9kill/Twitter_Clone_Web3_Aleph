{"ast":null,"code":"var _jsxFileName = \"/Users/sigterm9kill/Projects/twitter-clone/src/index.js\";\nimport Web3 from 'web3';\nimport { ethereum } from 'aleph-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst connectWeb3 = async e => {\n  if (e) e.preventDefault();\n  var web3, alephAccount;\n\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable(); // Accounts now exposed\n\n      console.log(\"Web 3 Connected...\");\n    } catch (error) {\n      console.error(error);\n    }\n  } // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n  }\n\n  if (window.ethereum.isConnected()) {\n    try {\n      alephAccount = await ethereum.from_provider(window['ethereum']);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return {\n    alephAccount: alephAccount,\n    web3: web3\n  };\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    connectWeb3: connectWeb3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals();","map":{"version":3,"sources":["/Users/sigterm9kill/Projects/twitter-clone/src/index.js"],"names":["Web3","ethereum","React","ReactDOM","App","reportWebVitals","connectWeb3","e","preventDefault","web3","alephAccount","window","enable","console","log","error","isConnected","from_provider","render","document","getElementById"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAO,gCAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/B,MAAIA,CAAJ,EACEA,CAAC,CAACC,cAAF;AAEF,MAAIC,IAAJ,EAAUC,YAAV;;AAEA,MAAIC,MAAM,CAACV,QAAX,EAAqB;AACnBQ,IAAAA,IAAI,GAAG,IAAIT,IAAJ,CAASW,MAAM,CAACV,QAAhB,CAAP;;AACA,QAAI;AACF;AACA,YAAMU,MAAM,CAACV,QAAP,CAAgBW,MAAhB,EAAN,CAFE,CAGF;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF,GAVD,CAWA;AAXA,OAYK,IAAIJ,MAAM,CAACF,IAAX,EAAiB;AACpB;AACAA,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAED,MAAIH,MAAM,CAACV,QAAP,CAAgBe,WAAhB,EAAJ,EAAmC;AACjC,QAAI;AACFN,MAAAA,YAAY,GAAG,MAAMT,QAAQ,CAACgB,aAAT,CAAuBN,MAAM,CAAC,UAAD,CAA7B,CAArB;AACD,KAFD,CAEE,OAAMI,KAAN,EAAa;AACbF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF;;AAED,SAAO;AACLL,IAAAA,YAAY,EAAEA,YADT;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CApCD;;AAsCAN,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAK,IAAA,WAAW,EAAEZ;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAf,eAAe","sourcesContent":["import Web3 from 'web3'\nimport { ethereum } from 'aleph-js'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst connectWeb3 = async (e) => {\n  if (e)\n    e.preventDefault()\n\n  var web3, alephAccount;\n\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Accounts now exposed\n      console.log(\"Web 3 Connected...\")\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n  }\n\n  if (window.ethereum.isConnected()) {\n    try {\n      alephAccount = await ethereum.from_provider(window['ethereum'])\n    } catch(error) {\n      console.error(error)\n    }\n  }\n\n  return {\n    alephAccount: alephAccount,\n    web3: web3\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App connectWeb3={connectWeb3} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}