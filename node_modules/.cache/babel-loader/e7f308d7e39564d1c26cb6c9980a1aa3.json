{"ast":null,"code":"var _jsxFileName = \"/Users/sigterm9kill/Projects/twitter-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport Navbar from './components/Navbar';\nimport AccountButton from './components/AccountButton';\nimport Posts from './components/posts/Posts';\nimport PostFormModal from './components/posts/PostFormModal';\nimport ShowPost from './components/posts/ShowPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [web3, setWeb3] = useState();\n  const [alephAccount, setAlephAccount] = useState();\n  const [walletAddress, setWalletAddress] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const connectWallet = async e => {\n    const {\n      alephAccount,\n      web3\n    } = await props.connectWeb3(e);\n    const accounts = await web3.eth.getAccounts();\n    setWeb3(web3);\n    setAlephAccount(alephAccount);\n    setWalletAddress(accounts[0]);\n  };\n\n  useEffect(() => {\n    if (window.ethereum.isConnected()) {\n      connectWallet();\n    }\n  }, []);\n\n  const truncateAddress = address => {\n    return `${address.slice(0, 5)}...${address.slice(address.length - 4, address.length)}`;\n  };\n\n  const timeSince = date => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"y\";\n    }\n\n    interval = seconds / 2592000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"m\";\n    }\n\n    interval = seconds / 86400;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"d\";\n    }\n\n    interval = seconds / 3600;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"h\";\n    }\n\n    interval = seconds / 60;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"m\";\n    }\n\n    return Math.floor(seconds) + \"s\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        setModalOpen: setModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccountButton, {\n        connectWallet: connectWallet,\n        walletAddress: walletAddress,\n        truncateAddress: truncateAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 offset-3\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                children: /*#__PURE__*/_jsxDEV(Posts, {\n                  truncateAddress: truncateAddress,\n                  timeSince: timeSince,\n                  setModalOpen: setModalOpen,\n                  walletAddress: walletAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/posts/:item_hash\",\n                children: /*#__PURE__*/_jsxDEV(ShowPost, {\n                  timeSince: timeSince,\n                  truncateAddress: truncateAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostFormModal, {\n        alephAccount: alephAccount,\n        modalOpen: modalOpen,\n        setModalOpen: setModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dGY6Cz0Gd4lWDhpR2LRYGCtfQQI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sigterm9kill/Projects/twitter-clone/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","AccountButton","Posts","PostFormModal","ShowPost","App","props","web3","setWeb3","alephAccount","setAlephAccount","walletAddress","setWalletAddress","modalOpen","setModalOpen","connectWallet","e","connectWeb3","accounts","eth","getAccounts","window","ethereum","isConnected","truncateAddress","address","slice","length","timeSince","date","seconds","Math","floor","Date","interval"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './App.scss';\nimport Navbar from './components/Navbar';\nimport AccountButton from './components/AccountButton';\n\nimport Posts from './components/posts/Posts';\nimport PostFormModal from './components/posts/PostFormModal';\nimport ShowPost from './components/posts/ShowPost';\n\nfunction App(props) {\n\n  const [web3, setWeb3] = useState()\n  const [alephAccount, setAlephAccount] = useState()\n  const [walletAddress, setWalletAddress] = useState()\n\n  const [modalOpen, setModalOpen] = useState(false)\n\n  const connectWallet = async (e) => {\n    const { alephAccount, web3 } = await props.connectWeb3(e)\n    const accounts = await web3.eth.getAccounts()\n\n    setWeb3(web3)\n    setAlephAccount(alephAccount)\n    setWalletAddress(accounts[0])\n  }\n\n  useEffect(() => {\n    if (window.ethereum.isConnected()) {\n      connectWallet()\n    }\n  }, [])\n\n  const truncateAddress = (address) => {\n    return `${address.slice(0,5)}...${address.slice(address.length - 4, address.length)}`\n  }\n\n  const timeSince = (date) => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = seconds / 31536000;\n  \n    if (interval > 1) {\n      return Math.floor(interval) + \"y\";\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + \"m\";\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + \"d\";\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + \"h\";\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + \"m\";\n    }\n    return Math.floor(seconds) + \"s\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <div className='overlay'></div> */}\n        <Navbar setModalOpen={setModalOpen} />\n        <AccountButton connectWallet={connectWallet} walletAddress={walletAddress} truncateAddress={truncateAddress} />\n        <div className='container'>\n          <div className='row'>\n            <div className='col-6 offset-3'>\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Posts \n                    truncateAddress={truncateAddress} \n                    timeSince={timeSince}\n                    setModalOpen={setModalOpen}\n                    walletAddress={walletAddress}\n                  />\n                </Route>\n                <Route path=\"/posts/:item_hash\">\n                  <ShowPost \n                    timeSince={timeSince} \n                    truncateAddress={truncateAddress}\n                  />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n\n        <PostFormModal \n          alephAccount={alephAccount} \n          modalOpen={modalOpen}\n          setModalOpen={setModalOpen}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}