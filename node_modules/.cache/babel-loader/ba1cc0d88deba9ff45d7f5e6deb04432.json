{"ast":null,"code":"var _jsxFileName = \"/Users/sigterm9kill/Projects/twitter-clone/src/components/posts/PostFormModal.js\",\n    _s = $RefreshSig$();\n\nimport { posts } from 'aleph-js';\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport PostModel from '../../models/PostModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostFormModal(props) {\n  _s();\n\n  const [postContent, setPostContent] = useState('');\n  const [txInProgress, setTxInProgress] = useState(false);\n  useEffect(() => {\n    if (props.modalOpen) {\n      setPostContent('');\n      setTxInProgress(false);\n    }\n  }, [props.modalOpen]);\n\n  const handleTyping = e => {\n    setPostContent(e.target.value);\n  };\n\n  const close = e => {\n    e.preventDefault();\n    props.setModalOpen(false);\n  };\n\n  const submitPost = async e => {\n    e.preventDefault();\n    setTxInProgress(true);\n    PostModel.create(props.alephAccount.address, postContent, props.alephAccount).catch(error => {\n      setTxInProgress(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.modalOpen,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"py-0\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: close,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), txInProgress ? /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 text-center mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lds-dual-ring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Please confirm in your wallet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleTyping,\n          placeholder: \"Type your message...\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: submitPost,\n          disabled: postContent == '' || postContent == undefined,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostFormModal, \"RCsIODWI+ovJFerPlJ1vXNni54E=\");\n\n_c = PostFormModal;\nexport default PostFormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFormModal\");","map":{"version":3,"sources":["/Users/sigterm9kill/Projects/twitter-clone/src/components/posts/PostFormModal.js"],"names":["posts","useState","useEffect","Modal","PostModel","PostFormModal","props","postContent","setPostContent","txInProgress","setTxInProgress","modalOpen","handleTyping","e","target","value","close","preventDefault","setModalOpen","submitPost","create","alephAccount","address","catch","error","undefined"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACK,SAAV,EAAqB;AACnBH,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GALQ,EAKN,CAACJ,KAAK,CAACK,SAAP,CALM,CAAT;;AAOA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BL,IAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAIH,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACI,cAAF;AAEAX,IAAAA,KAAK,CAACY,YAAN,CAAmB,KAAnB;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAG,MAAON,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AAEAP,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEAN,IAAAA,SAAS,CAACgB,MAAV,CAAiBd,KAAK,CAACe,YAAN,CAAmBC,OAApC,EAA6Cf,WAA7C,EAA0DD,KAAK,CAACe,YAAhE,EAA8EE,KAA9E,CAAqFC,KAAD,IAAW;AAC7Fd,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFD;AAGD,GARD;;AAUA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,KAAK,CAACK,SAAnB;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,MAAxB;AAAA,6BACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAEK,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAKIP,YAAY,gBACZ,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADY,gBAQZ;AAAA,8BACE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAU,UAAA,QAAQ,EAAEG,YAApB;AAAkC,UAAA,WAAW,EAAC,sBAA9C;AAAqE,UAAA,SAAS,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAEO,UAA3D;AAAuE,UAAA,QAAQ,EAAEZ,WAAW,IAAI,EAAf,IAAqBA,WAAW,IAAIkB,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDQpB,a;;KAAAA,a;AA2DT,eAAeA,aAAf","sourcesContent":["import { posts } from 'aleph-js'\nimport { useState, useEffect } from 'react'\nimport Modal from \"react-bootstrap/Modal\";\nimport PostModel from '../../models/PostModel';\n\nfunction PostFormModal(props) {\n\n  const [postContent, setPostContent] = useState('')\n  const [txInProgress, setTxInProgress] = useState(false)\n\n  useEffect(() => {\n    if (props.modalOpen) {\n      setPostContent('')\n      setTxInProgress(false)\n    }\n  }, [props.modalOpen])\n\n  const handleTyping = (e) => {\n    setPostContent(e.target.value)\n  }\n\n  const close = (e) => {\n    e.preventDefault()\n\n    props.setModalOpen(false)\n  }\n\n  const submitPost = async (e) => {\n    e.preventDefault()\n\n    setTxInProgress(true)\n\n    PostModel.create(props.alephAccount.address, postContent, props.alephAccount).catch((error) => {\n      setTxInProgress(false)\n    })\n  }\n\n  return (\n    <Modal show={props.modalOpen}>\n      <Modal.Header className='py-0'>\n        <a href='#' onClick={close}>Ã—</a>\n      </Modal.Header>\n      {\n        txInProgress ?\n        <Modal.Body>\n          <div className=\"p-5 text-center mb-5\">\n            <div className=\"lds-dual-ring\"></div>\n            <p className='mt-2'>Please confirm in your wallet.</p>\n          </div>\n        </Modal.Body>\n        :\n        <div>\n          <Modal.Body>\n            <textarea onChange={handleTyping} placeholder='Type your message...' className='form-control' />\n          </Modal.Body>\n          <Modal.Footer>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={submitPost} disabled={postContent == '' || postContent == undefined}>Post</button>\n          </Modal.Footer>\n        </div>\n      }\n    </Modal>\n  );\n}\n\nexport default PostFormModal;\n"]},"metadata":{},"sourceType":"module"}