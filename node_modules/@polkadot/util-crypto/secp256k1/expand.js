"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = secp256k1Expand;

var _elliptic = require("elliptic");

var _util = require("@polkadot/util");

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const ec = new _elliptic.ec('secp256k1');

function secp256k1Expand(publicKey) {
  (0, _util.assert)([33, 65].includes(publicKey.length), 'Invalid publicKey provided');
  const expanded = ec.keyFromPublic(publicKey).getPublic();
  return (0, _util.u8aConcat)((0, _util.bnToU8a)(expanded.getX(), {
    bitLength: 256,
    isLe: false
  }), (0, _util.bnToU8a)(expanded.getY(), {
    bitLength: 256,
    isLe: false
  }));
}